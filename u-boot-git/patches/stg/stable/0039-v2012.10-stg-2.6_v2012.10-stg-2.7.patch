diff --git a/Makefile b/Makefile
index 609636a01a362d9a7634ac1fc17c547285256399..9edf8c1752a14ba1958f37557a9611c155e97b5f 100644
--- a/Makefile
+++ b/Makefile
@@ -24,7 +24,7 @@
 VERSION = 2012
 PATCHLEVEL = 10
 SUBLEVEL =
-EXTRAVERSION = -stg-2.6
+EXTRAVERSION = -stg-2.7
 ifneq "$(SUBLEVEL)" ""
 U_BOOT_VERSION = $(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION)
 else
diff --git a/arch/mips/cpu/mips32/danube/pmu.c b/arch/mips/cpu/mips32/danube/pmu.c
index 0f7fb8eb329c07ce0dcf300bbf65bb80fc8265af..f2ba73aa69363bd0070de9ff6b57847acc86f15f 100644
--- a/arch/mips/cpu/mips32/danube/pmu.c
+++ b/arch/mips/cpu/mips32/danube/pmu.c
@@ -51,7 +51,7 @@ u32 ltq_pm_map(enum ltq_pm_modules module)
 	switch (module) {
 	case LTQ_PM_CORE:
 		val = LTQ_PMU_PWDCR_UART1 | LTQ_PMU_PWDCR_FPI0 |
-			LTQ_PMU_PWDCR_EBU;
+			LTQ_PMU_PWDCR_LEDC | LTQ_PMU_PWDCR_EBU;
 		break;
 	case LTQ_PM_DMA:
 		val = LTQ_PMU_PWDCR_DMA;
diff --git a/arch/mips/cpu/mips32/vrx200/pmu.c b/arch/mips/cpu/mips32/vrx200/pmu.c
index 9d4fcb3d3c1707b25640d21f6ea093ce6d12de72..5ffd14e6874fa9cfbe52fcb7de43bf1d1b36a732 100644
--- a/arch/mips/cpu/mips32/vrx200/pmu.c
+++ b/arch/mips/cpu/mips32/vrx200/pmu.c
@@ -61,7 +61,7 @@ u32 ltq_pm_map(enum ltq_pm_modules module)
 	switch (module) {
 	case LTQ_PM_CORE:
 		val = LTQ_PMU_PWDCR_UART1 | LTQ_PMU_PWDCR_FPIM |
-			LTQ_PMU_PWDCR_EBU;
+			LTQ_PMU_PWDCR_LEDC | LTQ_PMU_PWDCR_EBU;
 		break;
 	case LTQ_PM_DMA:
 		val = LTQ_PMU_PWDCR_DMA;
diff --git a/arch/mips/include/asm/arch-danube/config.h b/arch/mips/include/asm/arch-danube/config.h
index 2e37947912e4189451f121483350444925972a49..12b43fc25b2d8d53b7833117ea24f2f33c122527 100644
--- a/arch/mips/include/asm/arch-danube/config.h
+++ b/arch/mips/include/asm/arch-danube/config.h
@@ -69,7 +69,7 @@
 
 /* GPIO */
 #define CONFIG_LANTIQ_GPIO
-#define CONFIG_SYS_GPIO_MAX_BANKS	2
+#define CONFIG_LTQ_GPIO_MAX_BANKS	2
 
 /* FLASH driver */
 #if defined(CONFIG_LTQ_SUPPORT_NOR_FLASH)
diff --git a/arch/mips/include/asm/arch-danube/soc.h b/arch/mips/include/asm/arch-danube/soc.h
index 12c8042e5c18239299a12950ad5cc056e8ab3a30..948dc7f5d38101c107024a6f7c8f531176c606eb 100644
--- a/arch/mips/include/asm/arch-danube/soc.h
+++ b/arch/mips/include/asm/arch-danube/soc.h
@@ -12,6 +12,7 @@
 #define LTQ_ASC0_BASE			0x1E100400
 #define LTQ_SPI_BASE			0x1E100800
 #define LTQ_GPIO_BASE			0x1E100B00
+#define LTQ_SSIO_BASE			0x1E100BB0
 #define LTQ_ASC1_BASE			0x1E100C00
 #define LTQ_DMA_BASE			0x1E104100
 
diff --git a/arch/mips/include/asm/arch-vrx200/config.h b/arch/mips/include/asm/arch-vrx200/config.h
index 723f4b8a920cd5a9b6f881230a7715dbb904bbf3..044ebf33609c4ebefb0d94909c8313c8d1a1436a 100644
--- a/arch/mips/include/asm/arch-vrx200/config.h
+++ b/arch/mips/include/asm/arch-vrx200/config.h
@@ -81,8 +81,8 @@
 
 /* GPIO */
 #define CONFIG_LANTIQ_GPIO
-#define CONFIG_SYS_GPIO_MAX_BANKS	3
-#define CONFIG_SYS_GPIO_BANK3
+#define CONFIG_LTQ_GPIO_MAX_BANKS	3
+#define CONFIG_LTQ_HAS_GPIO_BANK3
 
 /* FLASH driver */
 #if defined(CONFIG_LTQ_SUPPORT_NOR_FLASH)
@@ -156,7 +156,7 @@
 #endif
 
 #if defined(CONFIG_SYS_BOOT_RAM)
-#define CONFIG_SYS_TEXT_BASE		0x80100000
+#define CONFIG_SYS_TEXT_BASE		0xA0100000
 #define CONFIG_SKIP_LOWLEVEL_INIT
 #define CONFIG_SYS_DISABLE_CACHE
 #endif
diff --git a/arch/mips/include/asm/arch-vrx200/soc.h b/arch/mips/include/asm/arch-vrx200/soc.h
index d4cb48c9a660a65a966f37a551d670140c90a057..8339ea3b033a7beef997a4ca79bb37db79cf45ad 100644
--- a/arch/mips/include/asm/arch-vrx200/soc.h
+++ b/arch/mips/include/asm/arch-vrx200/soc.h
@@ -12,6 +12,7 @@
 #define LTQ_ASC0_BASE			0x1E100400
 #define LTQ_SPI_BASE			0x1E100800
 #define LTQ_GPIO_BASE			0x1E100B00
+#define LTQ_SSIO_BASE			0x1E100BB0
 #define LTQ_ASC1_BASE			0x1E100C00
 #define LTQ_DMA_BASE			0x1E104100
 
diff --git a/arch/mips/include/asm/lantiq/cpu.h b/arch/mips/include/asm/lantiq/cpu.h
index 14215046df08b2d2d37de4a31d524c3cc9a494ba..fb775916315ea7618feaf175904e64dc0dc2430b 100644
--- a/arch/mips/include/asm/lantiq/cpu.h
+++ b/arch/mips/include/asm/lantiq/cpu.h
@@ -27,6 +27,7 @@ const char *ltq_boot_select_str(void);
 
 void ltq_pmu_init(void);
 void ltq_ebu_init(void);
+void ltq_gpio_init(void);
 
 void ltq_pll_init(void);
 void ltq_dcdc_init(unsigned int dig_ref);
diff --git a/board/sphairon/isdn_sip_gw/isdn_sip_gw.c b/board/sphairon/isdn_sip_gw/isdn_sip_gw.c
index 589dea2ccf46d2e662e75e6776b2e1336b49b7c1..c3a30051f79652b57d145fd5b60f6a7ba0fcad7d 100644
--- a/board/sphairon/isdn_sip_gw/isdn_sip_gw.c
+++ b/board/sphairon/isdn_sip_gw/isdn_sip_gw.c
@@ -66,6 +66,13 @@ static inline void gpio_init(void)
 	/* GPIO 3.1 as output for NAND Read */
 	gpio_set_altfunc(49, GPIO_ALTSEL_SET, GPIO_ALTSEL_CLR, GPIO_DIR_OUT);
 
+	/* LEDC/LED_ST for LED shift register */
+	gpio_set_altfunc(4, GPIO_ALTSEL_SET, GPIO_ALTSEL_CLR, GPIO_DIR_OUT);
+	/* LEDC/LED_D for LED shift register */
+	gpio_set_altfunc(5, GPIO_ALTSEL_SET, GPIO_ALTSEL_CLR, GPIO_DIR_OUT);
+	/* LEDC/LED_SH for LED shift register */
+	gpio_set_altfunc(6, GPIO_ALTSEL_SET, GPIO_ALTSEL_CLR, GPIO_DIR_OUT);
+
 	/* Watchdog trigger line for MAX6722, needs clarification */
 	/* gpio_direction_output(8, 1); */
 
@@ -78,8 +85,10 @@ static inline void gpio_init(void)
 
 int board_early_init_f(void)
 {
-	if (do_gpio_init)
+	if (do_gpio_init) {
+		ltq_gpio_init();
 		gpio_init();
+	}
 
 	if (do_pll_init)
 		ltq_pll_init();
diff --git a/drivers/gpio/lantiq_gpio.c b/drivers/gpio/lantiq_gpio.c
index de49bceb48077855d62f397571d8267472e87248..28bcea5cbf49b4c8a10edfcc867fdf6728157cfa 100644
--- a/drivers/gpio/lantiq_gpio.c
+++ b/drivers/gpio/lantiq_gpio.c
@@ -10,6 +10,46 @@
 #include <asm/arch/gpio.h>
 #include <asm/lantiq/io.h>
 
+#define SSIO_GPIO_BASE		64
+
+#define SSIO_CON0_SWU		(1 << 31)
+#define SSIO_CON0_RZFL		(1 << 26)
+#define SSIO_CON0_GPHY1_SHIFT	27
+#define SSIO_CON0_GPHY1_CONFIG	((CONFIG_LTQ_SSIO_GPHY1_MODE & 0x7) << 27)
+
+#define SSIO_CON1_US_FPI	(2 << 30)
+#define SSIO_CON1_FPID_2HZ	(0 << 23)
+#define SSIO_CON1_FPID_4HZ	(1 << 23)
+#define SSIO_CON1_FPID_8HZ	(2 << 23)
+#define SSIO_CON1_FPID_10HZ	(3 << 23)
+#define SSIO_CON1_FPIS_1_2	(1 << 20)
+#define SSIO_CON1_FPIS_1_32	(2 << 20)
+#define SSIO_CON1_FPIS_1_64	(3 << 20)
+
+#define SSIO_CON1_GPHY2_SHIFT	15
+#define SSIO_CON1_GPHY2_CONFIG	((CONFIG_LTQ_SSIO_GPHY2_MODE & 0x7) << 15)
+
+#define SSIO_CON1_GROUP2	(1 << 2)
+#define SSIO_CON1_GROUP1	(1 << 1)
+#define SSIO_CON1_GROUP0	(1 << 0)
+#define SSIO_CON1_GROUP_CONFIG	(0x3)
+
+#ifdef CONFIG_LTQ_SSIO_SHIFT_REGS
+#define enable_ssio	1
+#else
+#define enable_ssio	0
+
+#define CONFIG_LTQ_SSIO_GPHY1_MODE	0
+#define CONFIG_LTQ_SSIO_GPHY2_MODE	0
+#define CONFIG_LTQ_SSIO_INIT_VALUE	0
+#endif
+
+#ifdef CONFIG_LTQ_SSIO_EDGE_FALLING
+#define SSIO_RZFL_CONFIG	SSIO_CON0_RZFL
+#else
+#define SSIO_RZFL_CONFIG	0
+#endif
+
 struct ltq_gpio_port_regs {
 	__be32	out;
 	__be32	in;
@@ -25,7 +65,7 @@ struct ltq_gpio_port_regs {
 
 struct ltq_gpio_regs {
 	u32				rsvd[4];
-	struct ltq_gpio_port_regs	ports[CONFIG_SYS_GPIO_MAX_BANKS];
+	struct ltq_gpio_port_regs	ports[CONFIG_LTQ_GPIO_MAX_BANKS];
 };
 
 struct ltq_gpio3_regs {
@@ -42,21 +82,64 @@ struct ltq_gpio3_regs {
 	__be32	altsel0;
 };
 
+struct ltq_ssio_regs {
+	__be32	con0;
+	__be32	con1;
+	__be32	cpu0;
+	__be32	cpu1;
+	__be32	ar;
+};
+
 static struct ltq_gpio_regs *ltq_gpio_regs =
 	(struct ltq_gpio_regs *) CKSEG1ADDR(LTQ_GPIO_BASE);
 
 static struct ltq_gpio3_regs *ltq_gpio3_regs =
 	(struct ltq_gpio3_regs *) CKSEG1ADDR(LTQ_GPIO_BASE);
 
+static struct ltq_ssio_regs *ltq_ssio_regs =
+	(struct ltq_ssio_regs *) CKSEG1ADDR(LTQ_SSIO_BASE);
+
 static int is_gpio_bank3(unsigned int port)
 {
-#ifdef CONFIG_SYS_GPIO_BANK3
+#ifdef CONFIG_LTQ_HAS_GPIO_BANK3
 	return port == 3;
 #else
 	return 0;
 #endif
 }
 
+static int is_gpio_ssio(unsigned int gpio)
+{
+#ifdef CONFIG_LTQ_SSIO_SHIFT_REGS
+	return gpio >= SSIO_GPIO_BASE;
+#else
+	return 0;
+#endif
+}
+
+static inline int ssio_gpio_to_bit(unsigned gpio)
+{
+	return 1 << (gpio - SSIO_GPIO_BASE);
+}
+
+int ltq_gpio_init(void)
+{
+	ltq_writel(&ltq_ssio_regs->ar, 0);
+	ltq_writel(&ltq_ssio_regs->cpu0, CONFIG_LTQ_SSIO_INIT_VALUE);
+	ltq_writel(&ltq_ssio_regs->cpu1, 0);
+	ltq_writel(&ltq_ssio_regs->con0, SSIO_CON0_SWU);
+
+	if (enable_ssio) {
+		ltq_writel(&ltq_ssio_regs->con0, SSIO_CON0_GPHY1_CONFIG |
+			SSIO_RZFL_CONFIG);
+		ltq_writel(&ltq_ssio_regs->con1, SSIO_CON1_US_FPI |
+			SSIO_CON1_FPID_8HZ | SSIO_CON1_GPHY2_CONFIG |
+			SSIO_CON1_GROUP_CONFIG);
+	}
+
+	return 0;
+}
+
 int gpio_request(unsigned gpio, const char *label)
 {
 	return 0;
@@ -75,6 +158,9 @@ int gpio_direction_input(unsigned gpio)
 	const void *gpio_altsel1 = &ltq_gpio_regs->ports[port].altsel1;
 	const void *gpio_dir = &ltq_gpio_regs->ports[port].dir;
 
+	if (is_gpio_ssio(gpio))
+		return 0;
+
 	if (is_gpio_bank3(port)) {
 		gpio_od = &ltq_gpio3_regs->od;
 		gpio_altsel0 = &ltq_gpio3_regs->altsel0;
@@ -104,6 +190,17 @@ int gpio_direction_output(unsigned gpio, int value)
 	const void *gpio_altsel1 = &ltq_gpio_regs->ports[port].altsel1;
 	const void *gpio_dir = &ltq_gpio_regs->ports[port].dir;
 	const void *gpio_out = &ltq_gpio_regs->ports[port].out;
+	u32 data = gpio_to_bit(gpio);
+
+	if (is_gpio_ssio(gpio)) {
+		data = ssio_gpio_to_bit(gpio);
+		if (value)
+			ltq_setbits(&ltq_ssio_regs->cpu0, data);
+		else
+			ltq_clrbits(&ltq_ssio_regs->cpu0, data);
+
+		return 0;
+	}
 
 	if (is_gpio_bank3(port)) {
 		gpio_od = &ltq_gpio3_regs->od;
@@ -117,17 +214,17 @@ int gpio_direction_output(unsigned gpio, int value)
 	 * Reset open drain and altsel configs to workaround improper
 	 * reset values or unwanted modifications by BootROM
 	 */
-	ltq_setbits(gpio_od, gpio_to_bit(gpio));
-	ltq_clrbits(gpio_altsel0, gpio_to_bit(gpio));
-	ltq_clrbits(gpio_altsel1, gpio_to_bit(gpio));
+	ltq_setbits(gpio_od, data);
+	ltq_clrbits(gpio_altsel0, data);
+	ltq_clrbits(gpio_altsel1, data);
 
 	if (value)
-		ltq_setbits(gpio_out, gpio_to_bit(gpio));
+		ltq_setbits(gpio_out, data);
 	else
-		ltq_clrbits(gpio_out, gpio_to_bit(gpio));
+		ltq_clrbits(gpio_out, data);
 
 	/* Switch to output */
-	ltq_setbits(gpio_dir, gpio_to_bit(gpio));
+	ltq_setbits(gpio_dir, data);
 
 	return 0;
 }
@@ -136,28 +233,40 @@ int gpio_get_value(unsigned gpio)
 {
 	unsigned port = gpio_to_port(gpio);
 	const void *gpio_in = &ltq_gpio_regs->ports[port].in;
+	u32 data = gpio_to_bit(gpio);
 	u32 val;
 
+	if (is_gpio_ssio(gpio)) {
+		gpio_in = &ltq_ssio_regs->cpu0;
+		data = ssio_gpio_to_bit(gpio);
+	}
+
 	if (is_gpio_bank3(port))
 		gpio_in = &ltq_gpio3_regs->in;
 
 	val = ltq_readl(gpio_in);
 
-	return !!(val & gpio_to_bit(gpio));
+	return !!(val & data);
 }
 
 int gpio_set_value(unsigned gpio, int value)
 {
 	unsigned port = gpio_to_port(gpio);
 	const void *gpio_out = &ltq_gpio_regs->ports[port].out;
+	u32 data = gpio_to_bit(gpio);
+
+	if (is_gpio_ssio(gpio)) {
+		gpio_out = &ltq_ssio_regs->cpu0;
+		data = ssio_gpio_to_bit(gpio);
+	}
 
 	if (is_gpio_bank3(port))
 		gpio_out = &ltq_gpio3_regs->out;
 
 	if (value)
-		ltq_setbits(gpio_out, gpio_to_bit(gpio));
+		ltq_setbits(gpio_out, data);
 	else
-		ltq_clrbits(gpio_out, gpio_to_bit(gpio));
+		ltq_clrbits(gpio_out, data);
 
 	return 0;
 }
@@ -170,6 +279,9 @@ int gpio_set_altfunc(unsigned gpio, int altsel0, int altsel1, int dir)
 	const void *gpio_altsel1 = &ltq_gpio_regs->ports[port].altsel1;
 	const void *gpio_dir = &ltq_gpio_regs->ports[port].dir;
 
+	if (is_gpio_ssio(gpio))
+		return 0;
+
 	if (is_gpio_bank3(port)) {
 		gpio_od = &ltq_gpio3_regs->od;
 		gpio_altsel0 = &ltq_gpio3_regs->altsel0;
@@ -203,6 +315,9 @@ int gpio_set_opendrain(unsigned gpio, int od)
 	unsigned port = gpio_to_port(gpio);
 	const void *gpio_od = &ltq_gpio_regs->ports[port].od;
 
+	if (is_gpio_ssio(gpio))
+		return 0;
+
 	if (is_gpio_bank3(port))
 		gpio_od = &ltq_gpio3_regs->od;
 
diff --git a/include/configs/isdn_sip_gw.h b/include/configs/isdn_sip_gw.h
index 75efb2065e672f2b291149205e4daf679328f879..00640b84c123b90c0691fcb16faaa084870feedf 100644
--- a/include/configs/isdn_sip_gw.h
+++ b/include/configs/isdn_sip_gw.h
@@ -17,6 +17,12 @@
 
 #define CONFIG_LTQ_SUPPORT_ETHERNET	/* Enable ethernet */
 
+#define CONFIG_LTQ_SSIO_SHIFT_REGS	2
+#define CONFIG_LTQ_SSIO_EDGE_FALLING
+#define CONFIG_LTQ_SSIO_GPHY1_MODE	0x3
+#define CONFIG_LTQ_SSIO_GPHY2_MODE	0x3
+#define CONFIG_LTQ_SSIO_INIT_VALUE	0xff03
+
 #define CONFIG_LTQ_SUPPORT_SPI_FLASH
 #define CONFIG_SPI_FLASH_MACRONIX	/* Supports MX29LV620 serial flash */
 #define CONFIG_SPI_FLASH_SPANSION	/* Supports SF25FL256S serial flash */
